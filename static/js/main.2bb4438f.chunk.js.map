{"version":3,"sources":["components/pageHeader/index.js","components/employeeRow/index.js","components/employeeTable/index.js","components/searchForm/index.js","components/sortMenu/index.js","utils/API.js","App.js","index.js"],"names":["PageHeader","props","className","EmployeeRow","src","photo","alt","name","location","role","email","phoneNumber","EmployeeTable","employees","map","employee","key","id","SearchForm","value","onChange","handleInputChange","type","placeholder","SortMenu","DropdownButton","title","Dropdown","Item","onClick","handleSortBtn","searchState","sortedList","filter","toLowerCase","includes","data","category","sort","a","b","App","useState","sortState","setSortState","setSearchState","EmployeeData","employeeList","setEmployeeList","useEffect","API","filteredSortedList","filterEmployees","e","target","innerHTML","ReactDOM","render","document","getElementById"],"mappings":"sqFAYeA,MARf,SAAoBC,GAClB,OACE,yBAAKC,UAAU,cACX,oD,YCSOC,MAbf,SAAqBF,GACjB,OACI,4BACI,4BAAI,yBAAKG,IAAKH,EAAMI,MAAOC,IAAI,oBAC/B,4BAAKL,EAAMM,MACX,4BAAKN,EAAMO,UACX,4BAAKP,EAAMQ,MACX,4BAAKR,EAAMS,OACX,4BAAKT,EAAMU,eCwBRC,MA/Bf,SAAuBX,GACnB,OACI,2BAAOC,UAAU,iBACb,+BACI,4BACI,6BACA,oCACA,wCACA,oCACA,qCACA,8CAGR,+BACKD,EAAMY,UAAUC,KAAI,SAAAC,GAAQ,OACzB,kBAAC,EAAD,CACIC,IAAKD,EAASE,GACdZ,MAAOU,EAASV,MAChBE,KAAMQ,EAASR,KACfC,SAAUO,EAASP,SACnBC,KAAMM,EAASN,KACfC,MAAOK,EAASL,MAChBC,YAAaI,EAASJ,oB,MCP/BO,MAff,SAAoBjB,GAChB,OACI,8BACI,2BACIkB,MAAOlB,EAAMkB,MACbC,SAAUnB,EAAMoB,kBAChBd,KAAK,cACLe,KAAK,OACLC,YAAY,iBACZN,GAAG,kB,uBCGJO,MAVf,SAAkBvB,GACd,OACI,kBAACwB,EAAA,EAAD,CAAgBR,GAAG,wBAAwBS,MAAM,WAC7C,kBAACC,EAAA,EAASC,KAAV,CAAeC,QAAS5B,EAAM6B,eAA9B,QACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,QAAS5B,EAAM6B,eAA9B,YACA,kBAACH,EAAA,EAASC,KAAV,CAAeC,QAAS5B,EAAM6B,eAA9B,U,QCTG,EACC,SAACC,EAAaC,GAK1B,OAJ0BA,EAAWC,QAAO,SAAAlB,GAExC,OADaA,EAASR,KAAK2B,cACfC,SAASJ,OAJd,EAQH,SAACK,EAAMC,GAEf,OADa,YAAOD,GACLE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEF,GAAYG,EAAEH,GAAa,GAAK,MC2DtDI,MA5Df,WAAe,MAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAIyBF,mBAAS,IAJlC,mBAINX,EAJM,KAIOc,EAJP,OAM2BH,mBAASI,GANpC,mBAMNC,EANM,KAMQC,EANR,KAyCb,OAtBAC,qBAAU,WAER,IAAMjB,EAXCkB,EAW0BJ,EAAcH,EAXPT,eAclCiB,EAVgB,SAACpB,EAAaC,GACpC,OAAOkB,EAAiBnB,EAAaC,GASVoB,CAAgBrB,EAAaC,GAGxDgB,EAAgBG,KAEf,CAACR,EAAWZ,IAab,yBAAK7B,UAAU,WACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CACEmB,kBATkB,SAAAgC,GACxBR,EAAeQ,EAAEC,OAAOnC,QASlBA,MAAOY,IAET,kBAAC,EAAD,CACED,cAlBc,SAAAuB,GACpBT,EAAaS,EAAEC,OAAOC,eAoBpB,kBAAC,EAAD,CACE1C,UAAWkC,M,MC1DnBS,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.2bb4438f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction PageHeader(props) {\n  return (\n    <div className=\"pageHeader\">\n        <h1>Employee Directory</h1>\n    </div>\n  );\n}\n\nexport default PageHeader;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction EmployeeRow(props) {\n    return (\n        <tr>\n            <td><img src={props.photo} alt=\"employee photo\"/></td>\n            <td>{props.name}</td>\n            <td>{props.location}</td>\n            <td>{props.role}</td>\n            <td>{props.email}</td>\n            <td>{props.phoneNumber}</td>\n        </tr>\n    );\n}\n\nexport default EmployeeRow;\n","import React from \"react\";\nimport \"./style.css\";\nimport EmployeeRow from \"../employeeRow\";\n\nfunction EmployeeTable(props) {\n    return (\n        <table className=\"employeeTable\">\n            <thead>\n                <tr>\n                    <th></th>\n                    <th>Name</th>\n                    <th>Location</th>\n                    <th>Role</th>\n                    <th>Email</th>\n                    <th>Phone Number</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.employees.map(employee => (\n                    <EmployeeRow\n                        key={employee.id}\n                        photo={employee.photo}\n                        name={employee.name}\n                        location={employee.location}\n                        role={employee.role}\n                        email={employee.email}\n                        phoneNumber={employee.phoneNumber}\n                    />\n                ))}\n        \n            </tbody>\n        </table>\n    );\n}\n\nexport default EmployeeTable;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n    return (\n        <form>\n            <input\n                value={props.value}\n                onChange={props.handleInputChange}\n                name=\"searchInput\"\n                type=\"text\"\n                placeholder=\"Search by name\"\n                id=\"searchInput\"\n            />\n        </form>\n    );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport Dropdown from 'react-bootstrap/Dropdown'\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SortMenu(props) {\n    return (\n        <DropdownButton id=\"dropdown-basic-button\" title=\"Sort by\">\n            <Dropdown.Item onClick={props.handleSortBtn}>Name</Dropdown.Item>\n            <Dropdown.Item onClick={props.handleSortBtn}>Location</Dropdown.Item>\n            <Dropdown.Item onClick={props.handleSortBtn}>Role</Dropdown.Item>\n        </DropdownButton>\n    );\n}\n\nexport default SortMenu;\n","// Export an object containing methods used for filtering and sorting\n\nexport default {\n  filterByName: (searchState, sortedList) => {\n    const filteredEmployees = sortedList.filter(employee => {\n        const name = employee.name.toLowerCase();\n        return name.includes(searchState);\n    });\n    return filteredEmployees;\n  },\n  sortData: (data, category) => {\n    const newData = [...data];\n    return newData.sort((a, b) => (a[category] > b[category]) ? 1 : -1);\n  }\n};","import React, { useEffect, useState } from \"react\";\n// import logo from './logo.svg';\n// import axios from \"axios\";\nimport './App.css';\nimport EmployeeData from \"./employeeData.json\";\nimport PageHeader from \"./components/pageHeader\";\nimport EmployeeTable from \"./components/employeeTable\";\nimport SearchForm from \"./components/searchForm\";\nimport SortMenu from \"./components/sortMenu\";\nimport API from \"./utils/API\";\n\nfunction App() {\n  // to track what to sort by\n  const [sortState, setSortState] = useState(\"\");\n  // to track what to filter by\n  const [searchState, setSearchState] = useState(\"\");\n  // employeeList to be rendered\n  const [employeeList, setEmployeeList] = useState(EmployeeData);\n\n  // Sorting employees by category\n  const sortEmployees = (employees, category) => {\n    return API.sortData(employees, category.toLowerCase());\n  };\n\n  // Filtering employees\n  const filterEmployees = (searchState, sortedList) => {\n    return API.filterByName(searchState, sortedList);\n  }\n\n  // When the search form or sort changes, run this to compute new employee list\n  useEffect(() => {\n    // sort employees\n    const sortedList = sortEmployees(EmployeeData, sortState) //EmployeeData, Location\n\n    // filter employees to get a new array\n    const filteredSortedList = filterEmployees(searchState, sortedList); //\"sa\", sorted list\n\n    // Update employee list to render\n    setEmployeeList(filteredSortedList);\n\n  }, [sortState, searchState])\n\n  // Handle choosing a sort option\n  const handleSortBtn = e => {\n    setSortState(e.target.innerHTML);\n  }\n\n  // Handle a change in the name search\n  const handleInputChange = e => {\n    setSearchState(e.target.value);\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <PageHeader />\n      <div className=\"filterSortDiv\">\n        <SearchForm\n          handleInputChange={handleInputChange}\n          value={searchState}\n        />\n        <SortMenu \n          handleSortBtn={handleSortBtn}\n        />\n      </div>\n      <EmployeeTable \n        employees={employeeList}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}